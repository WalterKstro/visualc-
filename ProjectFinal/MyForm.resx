<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="materialFlatButton6.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA37AAAN+wELdzWbAAAAB3RJ
        TUUH4QUTAhIs0ijd2AAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAADaSURBVEhL
        7VVBDoIwENxH6A+IevEDxBNf0EeqP+HqRQ0Xr/IJndGWlrURpdkbk0zSzmxnoUCRCaNwlcXmIssb+Mhg
        zRwXGQBxBvOuiseydrEBEPeqKIsu9o2zrLapohy66MGtOYEV2EaaJzV6rNFeaIDJQZsRK9bgDtcYx01a
        am49m8RrXqRHc6cNxS4oapLSPtZKI8Ucg6Sp2Av8JZzk1R+1+IVdE2IonLRvYL5FBAZ2D9kDE7vXlDD/
        0Ahcjd1R4QHR7rAjzI9rAltVolGTWPAP0z+cCX2IPAGFMr4SG3lHBgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="materialFlatButton5.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA37AAAN+wELdzWbAAAAB3RJ
        TUUH4QUTAgkqkn2zdwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAEfSURBVEhL
        7ZI9SkNREIWHCJJCsHADImiUlNmBrUVwCylcRKqQRaR1CzYuwgWIMRBelT5gZZWcczkDc683mAQreR8c
        eHPmzLz7fqylJWNj1lnY9QPFa9k2t96o9A4GC+6wqIE2UkOPvU+7eS69Kh92O6FUZmB4piVRM/WGpVfF
        Qyoz4K+8H7RiD4e6KL0qHlKZAf+4J/DXQnkoeood/w3CQFWKJfiXYMFhf1E8rS+NnmJ/Q+3Uzrv1T3HD
        AfQkDeipnVja1Tm8M5U/qd0ANT/gG/Tt/SB67A2ZxeAJrl+hF3yXx7QgwldCqWQ9RrhcWhWznMH1ffCn
        adEuEFiH8G9ac6axy27wvtKiXYTgXtJYNierjr+yfaWxbE5Wy//FbAspGTov+lwlCwAAAABJRU5ErkJg
        gg==
</value>
  </data>
  <data name="materialFlatButton4.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA37AAAN+wELdzWbAAAAB3RJ
        TUUH4QUTAgIsmOrPiQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAHTSURBVEhL
        7VS7SkNBFNxCC6200UZREB8BbTRYWVjpLwRi/sEqlZDKKhr/wR+wFVIIIaUEokG9YhSxMcbKSkKCzlxm
        ZckmNzcg2DgwLJwz57HnnrumF27Nym5glg7vzPI5+AY+g2fgAZiUbHhcm9VpJfqKYAcNFF7MzJjC4gFB
        Owh+70rWxk1qOOtddjK4N4sJhUdDnbvJA47J7fLJzE+gWAa+ptVBU7kw2yOS9AfE7lhOo67/YBamoClb
        PYrm5OoNdmrFYBBntjcmMQfth2JaKDorlw9tS1iAxWQeCOizNg45UjL7gICrSGF7mM3ALdZtATR2LLMP
        CLjn7KImUyxcmo1RxH2qSElmH3DyJ6KoLlMsoMA4YtqMxQ2KMvuA4GeDuIoyDwRuvGXjwLzMPuDk7x8K
        EZSReSA4dxsHpmX2AWcS7EjY5J7L1RdoZBPacDxg48qsTcrVG+imIDFZ5p7L5UHJHx39nlz9wfWEMHCC
        +BNluYrcFn5QzlxjsZ2TVaUYDD5cSFBxgi25im5SyypPFH4Fj5QmGny4IM4hsOUk6mYDDMfC5I79JEwS
        B3xbEJzSSEo4izjzYNr9oOxcyYcvEhdM+l8kNv6iyL7MvwsVQXJjvgGtQ3dJ4fJD3AAAAABJRU5ErkJg
        gg==
</value>
  </data>
  <data name="materialFlatButton3.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA37AAAN+wELdzWbAAAAB3RJ
        TUUH4QUTAgQqJ9PNOgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAADQSURBVEhL
        vZCxDcJAEASvAQc0YUgogE5c0BdDJ+ROgBJcBdxJKxm/di02gJFGBL4dDLHHI47DM8Zbfr6YeDbgfJ97
        nC55fO2cUxr/sG42u2ohu5JvM+VDFrCtFrIrP/+Cv5FvsPk/XZHR5BH92d+KjIaNHJHRsJEjMho2ckRG
        w0aOyGjYyBEZDRs5IqNhI0dkNGzkiIyGjRyR0bCRIzIaNnJERsNGjsho2MgRGQ0bOSKjyaOlHxkuyGjy
        qHUjx4aMZo7zoQ5T55fUbastMiDiDVox1hWE0NdUAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="materialFlatButton2.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA37AAAN+wELdzWbAAAAB3RJ
        TUUH4QUTAgYPXuF7/wAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAKPSURBVEhL
        nZVLaxRREIXLFz4WwRciGEGZVydDQB1BBBcBwY0uRLPRhb9AJChiwCziziBEdCe4MIugCG5UEDXRpaIB
        CWGmMxkhJiH+jfjVnerx9kxPpicHDn2pOlV1n9WSBq9Fts1L5mhZ8ucWpDAUSlCqSXanuTcPkvSScBSG
        8K/PqhRWQsl/YvxoUXJ9FpIOX2VwO7McI8lqc+IkhlJY5ntLV2op/qMsxf02dKhK/iB84wX/odhETYIL
        v6WYXZXe3aysH9t1/ONwPtJWJXiPL2Op6sAxsywD+3Ss+0rg5ygAPpmTzCEnbAP0B9A992LmYpNWoyZd
        kmN7GeuMVLTGbG6aJBXIcZU43SpWkn9m5noB449ojGDE3A3oKiuSv8GBnjFTCzj0216Oy84YGTx+mJXS
        Duf0UJP+ovnHzdQCvRz4P5qu8l2yPUkFvui+WkwDaQooiB2IcjEeTCqgnGkukraAgtiyaYfbFVDGinRT
        AM2UajmTF6IH144UOGsxjQLYJhMflAd0d1ULf5mpMxAftxergdPwtLlagM8VoBOkL6DQV0rgKw2Ga/Bx
        81kpsLst4i1Nmqk7kPQSCWY1CQy584G5HPC7Q6bAHWcoS+6EiZVDztgBvJU9aO/Dt+siW80cu6bav8zs
        mlzU4H5qTzJzR/jJmx5aNdaTKHDeHMpRM3cFv1UsSnDNzHUwky0s76VX5J65UoHYRrODU2aOQ/eVWbwz
        kTasp/CIuRNB4uZ2vbAkxcPmbgX734NI77kLsLv/sCK5i3wLOgk0iT8cOJ3q92k3ZBhWveC21F8rKx1Z
        T+jCG0JvATN9QPA3EunD8pOu8NV+NVGRvlMWsnnoqsqSPcntuELSEn/AXebaACL/ACc/u+5S+JrpAAAA
        AElFTkSuQmCC
</value>
  </data>
  <data name="materialFlatButton1.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA37AAAN+wELdzWbAAAAB3RJ
        TUUH4QUTAgAbEmEIBAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAEPSURBVEhL
        vVYxDsIwDPTAG/gAAsQv2PkDP6l4T9d+oHunjoCY+4VIXYqvcqQ0NSUpMifd0Pp8aWInKS3hRbvtk/aX
        Bx1udzpWzE5Y4R1i0Ig8HTWdN2xSMHvm8IXQFMiR9GXwV504oQkMUtkgV2x08LSvLHRRYg4dPMRuCvny
        X8w93WwmsuZrluUTm0lN+AUKqglDtiKHvo1iGotRjDbjh5RuyR2gH1sYvawENeYOMMAbnYNNpAoiZg8A
        b4ixQzUBTEKW4o+cMoqBmkcFMbb+LCheydA8mN1fBrBdIvMim7ep+UaTBLujAjA/7AAcsRywOa49uOp2
        F46HzMTmyvSQmthc+iHQZuhl2YwrfluI3rzOOkLSCTEgAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="bindingSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAkAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAsAAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAArwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAM8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADPAAAAEAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAH8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAA
        AAAAAAAAAAAAEAAAAG8AAACvAAAA3wAAAP8AAAD/AAAA3wAAAK8AAABvAAAAEAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAAAAAAAAAA
        AAAAAAAgAAAAsAAAAOAAAADgAAAAsAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAAAAAAAAAAACAAAADwAAAA/wAAAP8AAAD/AAAA/wAA
        APAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAALAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACwAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADfAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ALAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAADvAAAA/wAAAP8AAAD/AAAA/wAA
        AO8AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAgAAAArwAAAN8AAADfAAAArwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A////AP///wD///8A/gABAP4AAQD+AAEA/gABAP+A
        BwDzwA8A8///APP//wCAcD8AgGAfAPPgHwDz4B8A8+AfAP/gHwD/4B8A//A/AP///wD///8A////AP//
        /wA=
</value>
  </data>
</root>